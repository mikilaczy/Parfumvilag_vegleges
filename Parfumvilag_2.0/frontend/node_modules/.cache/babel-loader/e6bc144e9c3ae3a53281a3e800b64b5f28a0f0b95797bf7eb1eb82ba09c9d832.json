{"ast":null,"code":"// backend/routes/userRoutes.js\nconst express = require('express');\nconst router = express.Router();\nconst db = require('../db');\nconst jwt = require('jsonwebtoken');\nconst bcrypt = require('bcryptjs');\n\n// Middleware az autentikációhoz\nconst authenticateToken = (req, res, next) => {\n  var _req$headers$authoriz;\n  const token = (_req$headers$authoriz = req.headers['authorization']) === null || _req$headers$authoriz === void 0 ? void 0 : _req$headers$authoriz.split(' ')[1];\n  if (!token) return res.status(401).json({\n    error: 'Hozzáférés megtagadva'\n  });\n  jwt.verify(token, 'your_jwt_secret', (err, user) => {\n    if (err) return res.status(403).json({\n      error: 'Érvénytelen token'\n    });\n    req.user = user;\n    next();\n  });\n};\n\n// Felhasználó adatainak lekérése\nrouter.get('/', authenticateToken, (req, res) => {\n  const userId = req.user.id;\n  const sql = 'SELECT * FROM users WHERE id = ?';\n  db.query(sql, [userId], (err, results) => {\n    if (err) {\n      console.error('Hiba a felhasználó lekérdezésekor:', err);\n      return res.status(500).json({\n        error: 'Szerver hiba'\n      });\n    }\n    if (results.length === 0) {\n      return res.status(404).json({\n        error: 'Felhasználó nem található'\n      });\n    }\n    res.json(results[0]);\n  });\n});\n\n// Felhasználó adatainak frissítése\nrouter.put('/', authenticateToken, (req, res) => {\n  const userId = req.user.id;\n  const {\n    name,\n    email,\n    password,\n    phoneNumber,\n    profileImage\n  } = req.body;\n  let finalProfileImage = profileImage;\n\n  // Ha fájlt töltöttek fel, alakítsuk base64-re\n  if (req.files && req.files.profileImage) {\n    const file = req.files.profileImage;\n    if (!file.mimetype.startsWith('image/')) {\n      return res.status(400).json({\n        error: 'Csak képfájlokat lehet feltölteni!'\n      });\n    }\n    if (file.size > 5 * 1024 * 1024) {\n      return res.status(400).json({\n        error: 'A kép mérete nem lehet nagyobb 5 MB-nál!'\n      });\n    }\n    finalProfileImage = `data:${file.mimetype};base64,${file.data.toString('base64')}`;\n  }\n  let sql = 'UPDATE users SET name = ?, email = ?, phoneNumber = ?, profileImage = ?';\n  const params = [name, email, phoneNumber || null, finalProfileImage || null];\n  if (password) {\n    const hashedPassword = bcrypt.hashSync(password, 8);\n    sql += ', password = ?';\n    params.push(hashedPassword);\n  }\n  sql += ', updated_at = NOW() WHERE id = ?';\n  params.push(userId);\n  db.query(sql, params, (err, result) => {\n    if (err) {\n      console.error('Hiba a felhasználó frissítésekor:', err);\n      return res.status(500).json({\n        error: 'Szerver hiba'\n      });\n    }\n    if (result.affectedRows === 0) {\n      return res.status(404).json({\n        error: 'Felhasználó nem található'\n      });\n    }\n    // Frissített felhasználó visszaadása\n    db.query('SELECT * FROM users WHERE id = ?', [userId], (err, results) => {\n      if (err) {\n        console.error('Hiba a frissített felhasználó lekérdezésekor:', err);\n        return res.status(500).json({\n          error: 'Szerver hiba'\n        });\n      }\n      res.json(results[0]);\n    });\n  });\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","db","jwt","bcrypt","authenticateToken","req","res","next","_req$headers$authoriz","token","headers","split","status","json","error","verify","err","user","get","userId","id","sql","query","results","console","length","put","name","email","password","phoneNumber","profileImage","body","finalProfileImage","files","file","mimetype","startsWith","size","data","toString","params","hashedPassword","hashSync","push","result","affectedRows","module","exports"],"sources":["C:/Users/lacmik919/Desktop/Parfumvilag/Parfumvilag_2.0/frontend/src/pages/Profile.js"],"sourcesContent":["// backend/routes/userRoutes.js\r\nconst express = require('express');\r\nconst router = express.Router();\r\nconst db = require('../db');\r\nconst jwt = require('jsonwebtoken');\r\nconst bcrypt = require('bcryptjs');\r\n\r\n// Middleware az autentikációhoz\r\nconst authenticateToken = (req, res, next) => {\r\n  const token = req.headers['authorization']?.split(' ')[1];\r\n  if (!token) return res.status(401).json({ error: 'Hozzáférés megtagadva' });\r\n\r\n  jwt.verify(token, 'your_jwt_secret', (err, user) => {\r\n    if (err) return res.status(403).json({ error: 'Érvénytelen token' });\r\n    req.user = user;\r\n    next();\r\n  });\r\n};\r\n\r\n// Felhasználó adatainak lekérése\r\nrouter.get('/', authenticateToken, (req, res) => {\r\n  const userId = req.user.id;\r\n  const sql = 'SELECT * FROM users WHERE id = ?';\r\n  db.query(sql, [userId], (err, results) => {\r\n    if (err) {\r\n      console.error('Hiba a felhasználó lekérdezésekor:', err);\r\n      return res.status(500).json({ error: 'Szerver hiba' });\r\n    }\r\n    if (results.length === 0) {\r\n      return res.status(404).json({ error: 'Felhasználó nem található' });\r\n    }\r\n    res.json(results[0]);\r\n  });\r\n});\r\n\r\n// Felhasználó adatainak frissítése\r\nrouter.put('/', authenticateToken, (req, res) => {\r\n  const userId = req.user.id;\r\n  const { name, email, password, phoneNumber, profileImage } = req.body;\r\n  let finalProfileImage = profileImage;\r\n\r\n  // Ha fájlt töltöttek fel, alakítsuk base64-re\r\n  if (req.files && req.files.profileImage) {\r\n    const file = req.files.profileImage;\r\n    if (!file.mimetype.startsWith('image/')) {\r\n      return res.status(400).json({ error: 'Csak képfájlokat lehet feltölteni!' });\r\n    }\r\n    if (file.size > 5 * 1024 * 1024) {\r\n      return res.status(400).json({ error: 'A kép mérete nem lehet nagyobb 5 MB-nál!' });\r\n    }\r\n    finalProfileImage = `data:${file.mimetype};base64,${file.data.toString('base64')}`;\r\n  }\r\n\r\n  let sql = 'UPDATE users SET name = ?, email = ?, phoneNumber = ?, profileImage = ?';\r\n  const params = [name, email, phoneNumber || null, finalProfileImage || null];\r\n\r\n  if (password) {\r\n    const hashedPassword = bcrypt.hashSync(password, 8);\r\n    sql += ', password = ?';\r\n    params.push(hashedPassword);\r\n  }\r\n\r\n  sql += ', updated_at = NOW() WHERE id = ?';\r\n  params.push(userId);\r\n\r\n  db.query(sql, params, (err, result) => {\r\n    if (err) {\r\n      console.error('Hiba a felhasználó frissítésekor:', err);\r\n      return res.status(500).json({ error: 'Szerver hiba' });\r\n    }\r\n    if (result.affectedRows === 0) {\r\n      return res.status(404).json({ error: 'Felhasználó nem található' });\r\n    }\r\n    // Frissített felhasználó visszaadása\r\n    db.query('SELECT * FROM users WHERE id = ?', [userId], (err, results) => {\r\n      if (err) {\r\n        console.error('Hiba a frissített felhasználó lekérdezésekor:', err);\r\n        return res.status(500).json({ error: 'Szerver hiba' });\r\n      }\r\n      res.json(results[0]);\r\n    });\r\n  });\r\n});\r\n\r\nmodule.exports = router;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}