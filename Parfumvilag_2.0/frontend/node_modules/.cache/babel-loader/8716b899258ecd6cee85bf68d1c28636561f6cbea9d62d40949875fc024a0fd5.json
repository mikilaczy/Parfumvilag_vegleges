{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport '../style.css';\n\n/*  const Navbar = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem('isLoggedIn') === 'true');\r\n  const [username, setUsername] = useState(localStorage.getItem('username') || '');\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false); // State for dropdown\r\n\r\n  useEffect(() => {\r\n    const loggedIn = localStorage.getItem('isLoggedIn') === 'true';\r\n    const userName = localStorage.getItem('username') || '';\r\n    setIsLoggedIn(loggedIn);\r\n    setUsername(userName);\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('isLoggedIn');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('token');\r\n    setIsLoggedIn(false);\r\n    setUsername('');\r\n    window.location.href = '/';\r\n  };\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen(!isDropdownOpen); // Toggle dropdown visibility\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-dark\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar-content\">\r\n          <Link className=\"navbar-brand\" to=\"/\">Parfümvilág</Link>\r\n          <ul className=\"navbar-nav navbar-left\">\r\n            <li className=\"nav-item\">\r\n              <NavLink \r\n                className={({ isActive }) => `nav-link ${isActive ? 'active' : ''}`} \r\n                to=\"/katalogus\"\r\n              >\r\n                Katalógus\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink \r\n                className={({ isActive }) => `nav-link ${isActive ? 'active' : ''}`} \r\n                to=\"/kereses\"\r\n              >\r\n                Keresés\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink \r\n                className={({ isActive }) => `nav-link ${isActive ? 'active' : ''}`} \r\n                to=\"/rolunk\"\r\n              >\r\n                Rólunk\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <ul className=\"navbar-nav navbar-right\">\r\n            {isLoggedIn ? (\r\n              <>\r\n                <li className=\"nav-item\">\r\n                  <NavLink \r\n                    className={({ isActive }) => `nav-link profile-link ${isActive ? 'active' : ''}`} \r\n                    to=\"/profil\"\r\n                  >\r\n                    <i className=\"fas fa-user-circle\"></i> {username}\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <button className=\"btn btn-outline-light logout-btn\" onClick={handleLogout}>\r\n                    Kilépés\r\n                  </button>\r\n                </li>\r\n              </>\r\n            ) : (\r\n              <li className=\"nav-item dropdown\">\r\n                <div \r\n                  className=\"nav-link dropdown-toggle\" \r\n                  onClick={toggleDropdown} \r\n                  role=\"button\"\r\n                >\r\n                  Belépés\r\n                </div>\r\n                {isDropdownOpen && (\r\n                  <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                      <NavLink \r\n                        className=\"dropdown-item\" \r\n                        to=\"/bejelentkezes\" \r\n                        onClick={() => setIsDropdownOpen(false)}\r\n                      >\r\n                        Bejelentkezés\r\n                      </NavLink>\r\n                    </li>\r\n                    <li>\r\n                      <NavLink \r\n                        className=\"dropdown-item\" \r\n                        to=\"/regisztracio\" \r\n                        onClick={() => setIsDropdownOpen(false)}\r\n                      >\r\n                        Regisztráció\r\n                      </NavLink>\r\n                    </li>\r\n                  </ul>\r\n                )}\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n*/\nexport default Navbar;","map":{"version":3,"names":["React","useState","useEffect","Link","NavLink","Navbar"],"sources":["C:/Users/lacmik919/Desktop/Parfumvilag/Parfumvilag_2.0/frontend/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport '../style.css';\r\n\r\n/*  const Navbar = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem('isLoggedIn') === 'true');\r\n  const [username, setUsername] = useState(localStorage.getItem('username') || '');\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false); // State for dropdown\r\n\r\n  useEffect(() => {\r\n    const loggedIn = localStorage.getItem('isLoggedIn') === 'true';\r\n    const userName = localStorage.getItem('username') || '';\r\n    setIsLoggedIn(loggedIn);\r\n    setUsername(userName);\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('isLoggedIn');\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('token');\r\n    setIsLoggedIn(false);\r\n    setUsername('');\r\n    window.location.href = '/';\r\n  };\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen(!isDropdownOpen); // Toggle dropdown visibility\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-dark\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar-content\">\r\n          <Link className=\"navbar-brand\" to=\"/\">Parfümvilág</Link>\r\n          <ul className=\"navbar-nav navbar-left\">\r\n            <li className=\"nav-item\">\r\n              <NavLink \r\n                className={({ isActive }) => `nav-link ${isActive ? 'active' : ''}`} \r\n                to=\"/katalogus\"\r\n              >\r\n                Katalógus\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink \r\n                className={({ isActive }) => `nav-link ${isActive ? 'active' : ''}`} \r\n                to=\"/kereses\"\r\n              >\r\n                Keresés\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink \r\n                className={({ isActive }) => `nav-link ${isActive ? 'active' : ''}`} \r\n                to=\"/rolunk\"\r\n              >\r\n                Rólunk\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n          <ul className=\"navbar-nav navbar-right\">\r\n            {isLoggedIn ? (\r\n              <>\r\n                <li className=\"nav-item\">\r\n                  <NavLink \r\n                    className={({ isActive }) => `nav-link profile-link ${isActive ? 'active' : ''}`} \r\n                    to=\"/profil\"\r\n                  >\r\n                    <i className=\"fas fa-user-circle\"></i> {username}\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <button className=\"btn btn-outline-light logout-btn\" onClick={handleLogout}>\r\n                    Kilépés\r\n                  </button>\r\n                </li>\r\n              </>\r\n            ) : (\r\n              <li className=\"nav-item dropdown\">\r\n                <div \r\n                  className=\"nav-link dropdown-toggle\" \r\n                  onClick={toggleDropdown} \r\n                  role=\"button\"\r\n                >\r\n                  Belépés\r\n                </div>\r\n                {isDropdownOpen && (\r\n                  <ul className=\"dropdown-menu\">\r\n                    <li>\r\n                      <NavLink \r\n                        className=\"dropdown-item\" \r\n                        to=\"/bejelentkezes\" \r\n                        onClick={() => setIsDropdownOpen(false)}\r\n                      >\r\n                        Bejelentkezés\r\n                      </NavLink>\r\n                    </li>\r\n                    <li>\r\n                      <NavLink \r\n                        className=\"dropdown-item\" \r\n                        to=\"/regisztracio\" \r\n                        onClick={() => setIsDropdownOpen(false)}\r\n                      >\r\n                        Regisztráció\r\n                      </NavLink>\r\n                    </li>\r\n                  </ul>\r\n                )}\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n*/\r\nexport default Navbar;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,OAAO,QAAQ,kBAAkB;AAChD,OAAO,cAAc;;AAEreAAeC,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}