{"ast":null,"code":"// frontend/src/services/savedPerfumeService.js\nimport axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:5000/api\"; // Vagy ahogy nálad van\n\nconst getAuthConfig = () => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    console.error(\"No auth token found\");\n    // Itt akár hibát is dobhatnánk, vagy null-t adunk vissza,\n    // hogy a hívó tudja kezelni a be nem jelentkezett állapotot.\n    return null;\n  }\n  return {\n    headers: {\n      \"x-auth-token\": token\n    } // Vagy 'Authorization': `Bearer ${token}` a backend beállítástól függően\n  };\n};\n\n// Felhasználó kedvenc parfüm ID-inak lekérése\nexport const getMyFavoriteIds = async () => {\n  const config = getAuthConfig();\n  if (!config) throw new Error(\"Bejelentkezés szükséges.\"); // Hiba dobása, ha nincs token\n\n  try {\n    const response = await axios.get(`${API_BASE_URL}/saved-perfumes`, config);\n    return response.data; // Visszaadja a perfume_id tömböt\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error(\"Error fetching favorite IDs:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || new Error(\"Nem sikerült lekérni a kedvenceket.\");\n  }\n};\n\n// Kedvenc hozzáadása\nexport const addFavorite = async perfumeId => {\n  const config = getAuthConfig();\n  if (!config) throw new Error(\"Bejelentkezés szükséges.\");\n  try {\n    const response = await axios.post(`${API_BASE_URL}/saved-perfumes`, {\n      perfume_id: perfumeId\n    }, config);\n    return response.data; // { success: true, message: '...', id: ... } vagy hiba\n  } catch (error) {\n    var _error$response3, _error$response4;\n    console.error(\"Error adding favorite:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || new Error(\"Nem sikerült hozzáadni a kedvencekhez.\");\n  }\n};\n\n// Kedvenc eltávolítása\nexport const removeFavorite = async perfumeId => {\n  const config = getAuthConfig();\n  if (!config) throw new Error(\"Bejelentkezés szükséges.\");\n  try {\n    // Figyeljünk, hogy a backend :perfumeId paramétert vár az URL-ben\n    const response = await axios.delete(`${API_BASE_URL}/saved-perfumes/${perfumeId}`, config);\n    return response.data; // { success: true, message: '...' } vagy hiba\n  } catch (error) {\n    var _error$response5, _error$response6;\n    console.error(\"Error removing favorite:\", ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || new Error(\"Nem sikerült eltávolítani a kedvencekből.\");\n  }\n};\n\n// Kedvenc parfümök teljes adatainak lekérése (ha szükséges a Favorites oldalon)\nexport const getMyFavoritePerfumesDetails = async () => {\n  const config = getAuthConfig();\n  if (!config) throw new Error(\"Bejelentkezés szükséges.\");\n  try {\n    const favoriteIds = await getMyFavoriteIds();\n    console.log(\"Fetched favorite IDs:\", favoriteIds); // DEBUG: Check all IDs are fetched\n\n    if (!Array.isArray(favoriteIds) || favoriteIds.length === 0) {\n      return [];\n    }\n\n    // Fetch details - ensure no slicing or limiting happens here accidentally\n    const perfumeDetailsPromises = favoriteIds.map(id => axios.get(`${API_BASE_URL}/perfumes/${id}`) // Removed config here assuming public endpoint\n    .then(res => res.data).catch(err => {\n      console.warn(`Failed to fetch details for perfume ${id}:`, err.message);\n      return null;\n    }));\n    const perfumeDetailsResults = await Promise.all(perfumeDetailsPromises);\n    console.log(\"Fetched perfume details:\", perfumeDetailsResults); // DEBUG: Check results\n    return perfumeDetailsResults.filter(perfume => perfume !== null);\n  } catch (error) {\n    var _error$response7, _error$response8;\n    console.error(\"Error fetching favorite perfume details:\", ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n    throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || new Error(\"Nem sikerült lekérni a kedvenc parfümök adatait.\");\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","getAuthConfig","token","localStorage","getItem","console","error","headers","getMyFavoriteIds","config","Error","response","get","data","_error$response","_error$response2","message","addFavorite","perfumeId","post","perfume_id","_error$response3","_error$response4","removeFavorite","delete","_error$response5","_error$response6","getMyFavoritePerfumesDetails","favoriteIds","log","Array","isArray","length","perfumeDetailsPromises","map","id","then","res","catch","err","warn","perfumeDetailsResults","Promise","all","filter","perfume","_error$response7","_error$response8"],"sources":["C:/Users/KomPhone/Desktop/Parfumvilag2.0/Parfumvilag_2.0/frontend/src/services/savedPerfumeService.js"],"sourcesContent":["// frontend/src/services/savedPerfumeService.js\r\nimport axios from \"axios\";\r\n\r\nconst API_BASE_URL = \"http://localhost:5000/api\"; // Vagy ahogy nálad van\r\n\r\nconst getAuthConfig = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    console.error(\"No auth token found\");\r\n    // Itt akár hibát is dobhatnánk, vagy null-t adunk vissza,\r\n    // hogy a hívó tudja kezelni a be nem jelentkezett állapotot.\r\n    return null;\r\n  }\r\n  return {\r\n    headers: { \"x-auth-token\": token }, // Vagy 'Authorization': `Bearer ${token}` a backend beállítástól függően\r\n  };\r\n};\r\n\r\n// Felhasználó kedvenc parfüm ID-inak lekérése\r\nexport const getMyFavoriteIds = async () => {\r\n  const config = getAuthConfig();\r\n  if (!config) throw new Error(\"Bejelentkezés szükséges.\"); // Hiba dobása, ha nincs token\r\n\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/saved-perfumes`, config);\r\n    return response.data; // Visszaadja a perfume_id tömböt\r\n  } catch (error) {\r\n    console.error(\r\n      \"Error fetching favorite IDs:\",\r\n      error.response?.data || error.message\r\n    );\r\n    throw (\r\n      error.response?.data || new Error(\"Nem sikerült lekérni a kedvenceket.\")\r\n    );\r\n  }\r\n};\r\n\r\n// Kedvenc hozzáadása\r\nexport const addFavorite = async (perfumeId) => {\r\n  const config = getAuthConfig();\r\n  if (!config) throw new Error(\"Bejelentkezés szükséges.\");\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_BASE_URL}/saved-perfumes`,\r\n      { perfume_id: perfumeId },\r\n      config\r\n    );\r\n    return response.data; // { success: true, message: '...', id: ... } vagy hiba\r\n  } catch (error) {\r\n    console.error(\r\n      \"Error adding favorite:\",\r\n      error.response?.data || error.message\r\n    );\r\n    throw (\r\n      error.response?.data ||\r\n      new Error(\"Nem sikerült hozzáadni a kedvencekhez.\")\r\n    );\r\n  }\r\n};\r\n\r\n// Kedvenc eltávolítása\r\nexport const removeFavorite = async (perfumeId) => {\r\n  const config = getAuthConfig();\r\n  if (!config) throw new Error(\"Bejelentkezés szükséges.\");\r\n\r\n  try {\r\n    // Figyeljünk, hogy a backend :perfumeId paramétert vár az URL-ben\r\n    const response = await axios.delete(\r\n      `${API_BASE_URL}/saved-perfumes/${perfumeId}`,\r\n      config\r\n    );\r\n    return response.data; // { success: true, message: '...' } vagy hiba\r\n  } catch (error) {\r\n    console.error(\r\n      \"Error removing favorite:\",\r\n      error.response?.data || error.message\r\n    );\r\n    throw (\r\n      error.response?.data ||\r\n      new Error(\"Nem sikerült eltávolítani a kedvencekből.\")\r\n    );\r\n  }\r\n};\r\n\r\n// Kedvenc parfümök teljes adatainak lekérése (ha szükséges a Favorites oldalon)\r\nexport const getMyFavoritePerfumesDetails = async () => {\r\n  const config = getAuthConfig();\r\n  if (!config) throw new Error(\"Bejelentkezés szükséges.\");\r\n\r\n  try {\r\n    const favoriteIds = await getMyFavoriteIds();\r\n    console.log(\"Fetched favorite IDs:\", favoriteIds); // DEBUG: Check all IDs are fetched\r\n\r\n    if (!Array.isArray(favoriteIds) || favoriteIds.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    // Fetch details - ensure no slicing or limiting happens here accidentally\r\n    const perfumeDetailsPromises = favoriteIds.map((id) =>\r\n      axios\r\n        .get(`${API_BASE_URL}/perfumes/${id}`) // Removed config here assuming public endpoint\r\n        .then((res) => res.data)\r\n        .catch((err) => {\r\n          console.warn(\r\n            `Failed to fetch details for perfume ${id}:`,\r\n            err.message\r\n          );\r\n          return null;\r\n        })\r\n    );\r\n\r\n    const perfumeDetailsResults = await Promise.all(perfumeDetailsPromises);\r\n    console.log(\"Fetched perfume details:\", perfumeDetailsResults); // DEBUG: Check results\r\n    return perfumeDetailsResults.filter((perfume) => perfume !== null);\r\n  } catch (error) {\r\n    console.error(\r\n      \"Error fetching favorite perfume details:\",\r\n      error.response?.data || error.message\r\n    );\r\n    throw (\r\n      error.response?.data ||\r\n      new Error(\"Nem sikerült lekérni a kedvenc parfümök adatait.\")\r\n    );\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}