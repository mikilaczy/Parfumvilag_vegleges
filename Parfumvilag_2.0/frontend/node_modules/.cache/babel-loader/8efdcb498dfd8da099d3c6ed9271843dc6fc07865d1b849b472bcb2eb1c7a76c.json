{"ast":null,"code":"// frontend/src/services/userService.js\nimport axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst getUser = async () => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.get(`${API_BASE_URL}/users/me`, {\n      headers: {\n        'x-auth-token': token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Nem sikerült betölteni a felhasználó adatait!';\n  }\n};\nconst updateUser = async userData => {\n  const token = localStorage.getItem('token');\n  try {\n    const response = await axios.put(`${API_BASE_URL}/users/me`, userData, {\n      headers: {\n        'x-auth-token': token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Nem sikerült frissíteni a felhasználói adatokat!';\n  }\n};\nexport { getUser, updateUser };","map":{"version":3,"names":["axios","API_BASE_URL","getUser","token","localStorage","getItem","response","get","headers","data","error","_error$response","_error$response$data","updateUser","userData","put","_error$response2","_error$response2$data"],"sources":["C:/Users/lacmik919/Desktop/Parfumvilag/Parfumvilag_2.0/frontend/src/services/userService.js"],"sourcesContent":["// frontend/src/services/userService.js\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst getUser = async () => {\r\n  const token = localStorage.getItem('token');\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/users/me`, {\r\n      headers: { 'x-auth-token': token }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data?.error || 'Nem sikerült betölteni a felhasználó adatait!';\r\n  }\r\n};\r\n\r\nconst updateUser = async (userData) => {\r\n  const token = localStorage.getItem('token');\r\n  try {\r\n    const response = await axios.put(`${API_BASE_URL}/users/me`, userData, {\r\n      headers: { 'x-auth-token': token }\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error.response?.data?.error || 'Nem sikerült frissíteni a felhasználói adatokat!';\r\n  }\r\n};\r\n\r\nexport { getUser, updateUser };"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC1B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,YAAY,WAAW,EAAE;MAC3DO,OAAO,EAAE;QAAE,cAAc,EAAEL;MAAM;IACnC,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MAAM,EAAAD,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,+CAA+C;EACtF;AACF,CAAC;AAED,MAAMG,UAAU,GAAG,MAAOC,QAAQ,IAAK;EACrC,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACe,GAAG,CAAC,GAAGd,YAAY,WAAW,EAAEa,QAAQ,EAAE;MACrEN,OAAO,EAAE;QAAE,cAAc,EAAEL;MAAM;IACnC,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAM,gBAAA,EAAAC,qBAAA;IACd,MAAM,EAAAD,gBAAA,GAAAN,KAAK,CAACJ,QAAQ,cAAAU,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBP,IAAI,cAAAQ,qBAAA,uBAApBA,qBAAA,CAAsBP,KAAK,KAAI,kDAAkD;EACzF;AACF,CAAC;AAED,SAASR,OAAO,EAAEW,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}