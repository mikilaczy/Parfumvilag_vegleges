{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KomPhone\\\\Desktop\\\\Parfumvilag_vegleges\\\\Parfumvilag_2.0\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./pages/Home\";\nimport Catalog from \"./pages/Catalog\";\nimport PerfumeDetail from \"./pages/PerfumeDetail\";\nimport Profile from \"./pages/Profile\";\nimport Register from \"./pages/Register\";\nimport Search from \"./pages/Search\";\nimport Login from \"./pages/Login\";\nimport About from \"./pages/About\";\nimport Aszf from \"./pages/Aszf\";\nimport Favorites from \"./pages/Favorites\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./style.css\";\n\n// AuthContext létrehozása: globális állapot tárolására és megosztására szolgál (bejelentkezési állapot, felhasználói adatok)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\n// Fő alkalmazás komponens\nfunction App() {\n  _s();\n  // Állapotok az autentikáció kezeléséhez\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Bejelentkezési állapot (kezdetben false)\n  const [user, setUser] = useState(null); // Bejelentkezett felhasználó adatainak tárolása (kezdetben null)\n  const [token, setToken] = useState(localStorage.getItem(\"token\")); // JWT token tárolása (kezdetben a localStorage-ból olvasva)\n\n  // Effekt hook: Az alkalmazás betöltődésekor ellenőrzi a localStorage-t a mentett bejelentkezési állapot visszaállításához\n  useEffect(() => {\n    const storedToken = localStorage.getItem(\"token\"); // Token kiolvasása\n    const storedUser = localStorage.getItem(\"user\"); // Felhasználói adatok kiolvasása (JSON stringként tárolva)\n    if (storedToken) {\n      // Ha van mentett token\n      setToken(storedToken); // Beállítja a token állapotot\n      setIsLoggedIn(true); // Beállítja a bejelentkezett állapotot\n      if (storedUser) {\n        // Ha vannak mentett felhasználói adatok\n        try {\n          setUser(JSON.parse(storedUser)); // JSON string visszaalakítása objektummá és állapot beállítása\n        } catch (e) {\n          console.error(\"Failed to parse stored user data\", e); // Hiba logolása, ha a JSON parse nem sikerül\n          // Potenciálisan sérült adat kezelése, pl. kijelentkeztetés\n          logout(); // A logout hívás itt rekurzív loopot okozhat, ha a logout függősége nincs kezelve (de useCallback miatt valószínűleg rendben van)\n        }\n      }\n      // Opcionális: Itt lehetne ellenőrizni a token érvényességét a backenddel, ha szükséges\n    }\n    // Az üres függőségi tömb ([]) biztosítja, hogy ez az effect csak egyszer fusson le, az alkalmazás indulásakor.\n  }, []); // Figyelem: a logout függvény is lehetne függőség, de mivel useCallback-kel van definiálva, és nincs külső függősége, ez itt nem okoz problémát.\n\n  // Bejelentkezési függvény: frissíti a kontextus állapotát és a localStorage-t\n  // useCallback: Optimalizálás, biztosítja, hogy a függvény referenciája csak akkor változzon, ha a függőségei változnak (itt nincsenek).\n  const login = useCallback((userData, userToken) => {\n    try {\n      console.log(\"[Context] Updating context login:\", userData); // Logolás fejlesztéshez\n      localStorage.setItem(\"token\", userToken); // Token mentése a localStorage-ba\n      localStorage.setItem(\"isLoggedIn\", \"true\"); // Bejelentkezési állapot jelző mentése\n      // Biztosítjuk, hogy a userData létezik, mielőtt stringgé alakítanánk\n      if (userData) {\n        localStorage.setItem(\"user\", JSON.stringify(userData)); // Felhasználói adatok mentése JSON stringként\n      } else {\n        localStorage.removeItem(\"user\"); // Ha nincs userData, töröljük a régit (vagy hibát kezelünk)\n      }\n      // Kontextus állapotainak frissítése\n      setToken(userToken);\n      setUser(userData);\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.error(\"[Context] Error during login update:\", error); // Hiba logolása (pl. ha a userData nem szerializálható)\n    }\n  }, []); // Üres függőségi tömb\n\n  // Kijelentkezési függvény: frissíti a kontextus állapotát és törli az adatokat a localStorage-ból\n  // useCallback: Optimalizálás.\n  const logout = useCallback(() => {\n    // Adatok törlése a localStorage-ból\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"user\");\n    // Régebbi, esetleg felesleges elemek törlése (biztonság kedvéért)\n    localStorage.removeItem(\"username\");\n    localStorage.removeItem(\"email\");\n    // Kontextus állapotainak visszaállítása alaphelyzetbe\n    setToken(null);\n    setUser(null);\n    setIsLoggedIn(false);\n    // Opcionális: Átirányítás a főoldalra vagy bejelentkezési oldalra kijelentkezés után\n    // navigate('/'); // Ehhez a useNavigate hook-ot kellene használni a komponensben, vagy átadni paraméterként.\n  }, []); // Üres függőségi tömb.\n\n  // Az AuthContext Provider számára átadandó érték objektum összeállítása\n  const authContextValue = {\n    isLoggedIn,\n    user,\n    token,\n    login,\n    // login függvény átadása a kontextus fogyasztói számára\n    logout // logout függvény átadása a kontextus fogyasztói számára\n  };\n\n  // Komponens JSX struktúrája\n  return (\n    /*#__PURE__*/\n    // Az AuthContext.Provider körbeveszi az alkalmazás azon részeit, amelyeknek hozzá kell férniük a kontextushoz\n    _jsxDEV(AuthContext.Provider, {\n      value: authContextValue,\n      children: [\" \", /*#__PURE__*/_jsxDEV(Router, {\n        future: {\n          v7_startTransition: true,\n          v7_relativeSplatPath: true\n        },\n        children: [\" \", /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container my-5\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/katalogus\",\n              element: /*#__PURE__*/_jsxDEV(Catalog, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/kereses\",\n              element: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/rolunk\",\n              element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/bejelentkezes\",\n              element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/regisztracio\",\n              element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 50\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profil\",\n              element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/parfume/:id\",\n              element: /*#__PURE__*/_jsxDEV(PerfumeDetail, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/aszf\",\n              element: /*#__PURE__*/_jsxDEV(Aszf, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/kedvencek\",\n              element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(App, \"N2TUo9wm3H6n3ijMKRbpn61gIe8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","BrowserRouter","Router","Route","Routes","Navbar","Footer","Home","Catalog","PerfumeDetail","Profile","Register","Search","Login","About","Aszf","Favorites","jsxDEV","_jsxDEV","AuthContext","App","_s","isLoggedIn","setIsLoggedIn","user","setUser","token","setToken","localStorage","getItem","storedToken","storedUser","JSON","parse","e","console","error","logout","login","userData","userToken","log","setItem","stringify","removeItem","authContextValue","Provider","value","children","future","v7_startTransition","v7_relativeSplatPath","fileName","_jsxFileName","lineNumber","columnNumber","className","path","element","_c","$RefreshReg$"],"sources":["C:/Users/KomPhone/Desktop/Parfumvilag_vegleges/Parfumvilag_2.0/frontend/src/App.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from \"react\";\r\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./pages/Home\";\r\nimport Catalog from \"./pages/Catalog\";\r\nimport PerfumeDetail from \"./pages/PerfumeDetail\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Register from \"./pages/Register\";\r\nimport Search from \"./pages/Search\";\r\nimport Login from \"./pages/Login\";\r\nimport About from \"./pages/About\";\r\nimport Aszf from \"./pages/Aszf\";\r\nimport Favorites from \"./pages/Favorites\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./style.css\";\r\n\r\n// AuthContext létrehozása: globális állapot tárolására és megosztására szolgál (bejelentkezési állapot, felhasználói adatok)\r\nexport const AuthContext = createContext();\r\n\r\n// Fő alkalmazás komponens\r\nfunction App() {\r\n  // Állapotok az autentikáció kezeléséhez\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Bejelentkezési állapot (kezdetben false)\r\n  const [user, setUser] = useState(null); // Bejelentkezett felhasználó adatainak tárolása (kezdetben null)\r\n  const [token, setToken] = useState(localStorage.getItem(\"token\")); // JWT token tárolása (kezdetben a localStorage-ból olvasva)\r\n\r\n  // Effekt hook: Az alkalmazás betöltődésekor ellenőrzi a localStorage-t a mentett bejelentkezési állapot visszaállításához\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem(\"token\"); // Token kiolvasása\r\n    const storedUser = localStorage.getItem(\"user\"); // Felhasználói adatok kiolvasása (JSON stringként tárolva)\r\n    if (storedToken) {\r\n      // Ha van mentett token\r\n      setToken(storedToken); // Beállítja a token állapotot\r\n      setIsLoggedIn(true); // Beállítja a bejelentkezett állapotot\r\n      if (storedUser) {\r\n        // Ha vannak mentett felhasználói adatok\r\n        try {\r\n          setUser(JSON.parse(storedUser)); // JSON string visszaalakítása objektummá és állapot beállítása\r\n        } catch (e) {\r\n          console.error(\"Failed to parse stored user data\", e); // Hiba logolása, ha a JSON parse nem sikerül\r\n          // Potenciálisan sérült adat kezelése, pl. kijelentkeztetés\r\n          logout(); // A logout hívás itt rekurzív loopot okozhat, ha a logout függősége nincs kezelve (de useCallback miatt valószínűleg rendben van)\r\n        }\r\n      }\r\n      // Opcionális: Itt lehetne ellenőrizni a token érvényességét a backenddel, ha szükséges\r\n    }\r\n    // Az üres függőségi tömb ([]) biztosítja, hogy ez az effect csak egyszer fusson le, az alkalmazás indulásakor.\r\n  }, []); // Figyelem: a logout függvény is lehetne függőség, de mivel useCallback-kel van definiálva, és nincs külső függősége, ez itt nem okoz problémát.\r\n\r\n  // Bejelentkezési függvény: frissíti a kontextus állapotát és a localStorage-t\r\n  // useCallback: Optimalizálás, biztosítja, hogy a függvény referenciája csak akkor változzon, ha a függőségei változnak (itt nincsenek).\r\n  const login = useCallback((userData, userToken) => {\r\n    try {\r\n      console.log(\"[Context] Updating context login:\", userData); // Logolás fejlesztéshez\r\n      localStorage.setItem(\"token\", userToken); // Token mentése a localStorage-ba\r\n      localStorage.setItem(\"isLoggedIn\", \"true\"); // Bejelentkezési állapot jelző mentése\r\n      // Biztosítjuk, hogy a userData létezik, mielőtt stringgé alakítanánk\r\n      if (userData) {\r\n        localStorage.setItem(\"user\", JSON.stringify(userData)); // Felhasználói adatok mentése JSON stringként\r\n      } else {\r\n        localStorage.removeItem(\"user\"); // Ha nincs userData, töröljük a régit (vagy hibát kezelünk)\r\n      }\r\n      // Kontextus állapotainak frissítése\r\n      setToken(userToken);\r\n      setUser(userData);\r\n      setIsLoggedIn(true);\r\n    } catch (error) {\r\n      console.error(\"[Context] Error during login update:\", error); // Hiba logolása (pl. ha a userData nem szerializálható)\r\n    }\r\n  }, []); // Üres függőségi tömb\r\n\r\n  // Kijelentkezési függvény: frissíti a kontextus állapotát és törli az adatokat a localStorage-ból\r\n  // useCallback: Optimalizálás.\r\n  const logout = useCallback(() => {\r\n    // Adatok törlése a localStorage-ból\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"isLoggedIn\");\r\n    localStorage.removeItem(\"user\");\r\n    // Régebbi, esetleg felesleges elemek törlése (biztonság kedvéért)\r\n    localStorage.removeItem(\"username\");\r\n    localStorage.removeItem(\"email\");\r\n    // Kontextus állapotainak visszaállítása alaphelyzetbe\r\n    setToken(null);\r\n    setUser(null);\r\n    setIsLoggedIn(false);\r\n    // Opcionális: Átirányítás a főoldalra vagy bejelentkezési oldalra kijelentkezés után\r\n    // navigate('/'); // Ehhez a useNavigate hook-ot kellene használni a komponensben, vagy átadni paraméterként.\r\n  }, []); // Üres függőségi tömb.\r\n\r\n  // Az AuthContext Provider számára átadandó érték objektum összeállítása\r\n  const authContextValue = {\r\n    isLoggedIn,\r\n    user,\r\n    token,\r\n    login, // login függvény átadása a kontextus fogyasztói számára\r\n    logout, // logout függvény átadása a kontextus fogyasztói számára\r\n  };\r\n\r\n  // Komponens JSX struktúrája\r\n  return (\r\n    // Az AuthContext.Provider körbeveszi az alkalmazás azon részeit, amelyeknek hozzá kell férniük a kontextushoz\r\n    <AuthContext.Provider value={authContextValue}>\r\n      {\" \"}\r\n      {/* A kontextus értékének átadása */}\r\n      {/* Router beállítása a kliensoldali útvonalválasztáshoz */}\r\n      <Router future={{ v7_startTransition: true, v7_relativeSplatPath: true }}>\r\n        {\" \"}\r\n        {/* React Router v6+ beállítások */}\r\n        <Navbar />{\" \"}\r\n        {/* Navigációs sáv megjelenítése (hozzáfér az AuthContext-hez) */}\r\n        {/* Fő tartalmi konténer (Bootstrap stílussal) */}\r\n        <div className=\"container my-5\">\r\n          {/* Útvonalak definiálása */}\r\n          <Routes>\r\n            <Route path=\"/\" element={<Home />} /> {/* Főoldal útvonala */}\r\n            <Route path=\"/katalogus\" element={<Catalog />} />{\" \"}\r\n            {/* Hírek/Katalógus útvonala */}\r\n            <Route path=\"/kereses\" element={<Search />} />{\" \"}\r\n            {/* Keresés útvonala */}\r\n            <Route path=\"/rolunk\" element={<About />} /> {/* Rólunk útvonala */}\r\n            {/* Bejelentkezés útvonala (a komponens hozzáfér a kontextushoz) */}\r\n            <Route path=\"/bejelentkezes\" element={<Login />} />\r\n            {/* Regisztráció útvonala (a komponens hozzáfér a kontextushoz) */}\r\n            <Route path=\"/regisztracio\" element={<Register />} />\r\n            {/* Védett útvonal példa: Profil oldal */}\r\n            {/* Csak akkor jeleníti meg a Profil komponenst, ha a felhasználó be van jelentkezve, különben a Login komponenst */}\r\n            <Route\r\n              path=\"/profil\"\r\n              element={isLoggedIn ? <Profile /> : <Login />}\r\n            />\r\n            <Route path=\"/parfume/:id\" element={<PerfumeDetail />} />{\" \"}\r\n            {/* Parfüm részletes oldal útvonala dinamikus ID-vel */}\r\n            <Route path=\"/aszf\" element={<Aszf />} /> {/* ÁSZF útvonala */}\r\n            {/* Védett útvonal: Kedvencek oldal */}\r\n            {/* Csak akkor jeleníti meg a Favorites komponenst, ha a felhasználó be van jelentkezve, különben a Login komponenst */}\r\n            <Route\r\n              path=\"/kedvencek\"\r\n              element={isLoggedIn ? <Favorites /> : <Login />}\r\n            />\r\n          </Routes>\r\n        </div>\r\n        <Footer /> {/* Lábléc megjelenítése */}\r\n      </Router>\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}