{"ast":null,"code":"// frontend/src/services/userService.js\nimport axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:5000\"; // Próbáld meg így?\n\nconst getAuthConfig = () => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    console.error(\"userService: No auth token found\");\n    return null;\n  }\n  return {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token\n    }\n  };\n};\nexport const getUser = async () => {\n  const config = getAuthConfig();\n  console.log(\"[getUser] Fetching...\");\n  try {\n    const response = await axios.get(`${API_BASE_URL}/api/users/me`, config || {}); // Teljes útvonal\n    console.log(\"[getUser] Success:\", response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error(\"[getUser] Error:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    // Dobd tovább a hibát\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || new Error(error.message || \"Nem sikerült betölteni a felhasználó adatait!\");\n  }\n};\nexport const updateUser = async userData => {\n  const config = getAuthConfig();\n  if (!config) {\n    console.error(\"[updateUser] Auth config failed.\");\n    throw new Error(\"Nem sikerült hitelesíteni a felhasználót a frissítéshez.\");\n  }\n  console.log(\"[updateUser] Attempting PUT request to:\", `${API_BASE_URL}/users/me`);\n  console.log(\"[updateUser] Sending data:\", userData);\n  console.log(\"[updateUser] Using config:\", config);\n  try {\n    const response = await axios.put(`${API_BASE_URL}/api/users/me`, userData, config); // Teljes útvonal\n    console.log(\"[updateUser] PUT Request successful! Response status:\", response.status);\n    console.log(\"[updateUser] Response data:\", response.data);\n    // Fontos: A Promise itt resolve-olódik\n    return response.data; // Visszaadjuk a választ\n  } catch (error) {\n    var _error$response3, _error$response4, _error$response5, _error$response5$data;\n    console.error(\"[updateUser] PUT Request failed!\");\n    console.error(\"[updateUser] Error status:\", (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status);\n    console.error(\"[updateUser] Error data:\", (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n    console.error(\"[updateUser] Full error:\", error);\n    // Fontos: A Promise itt reject-elődni fog\n    throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.error) || \"Nem sikerült frissíteni a felhasználói adatokat!\");\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","getAuthConfig","token","localStorage","getItem","console","error","headers","getUser","config","log","response","get","data","_error$response","_error$response2","message","Error","updateUser","userData","put","status","_error$response3","_error$response4","_error$response5","_error$response5$data"],"sources":["C:/Users/KomPhone/Desktop/Parfumvilag_vegleges/Parfumvilag_2.0/frontend/src/services/userService.js"],"sourcesContent":["// frontend/src/services/userService.js\r\nimport axios from \"axios\";\r\n\r\nconst API_BASE_URL = \"http://localhost:5000\"; // Próbáld meg így?\r\n\r\nconst getAuthConfig = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) {\r\n    console.error(\"userService: No auth token found\");\r\n    return null;\r\n  }\r\n  return {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      \"x-auth-token\": token,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getUser = async () => {\r\n  const config = getAuthConfig();\r\n  console.log(\"[getUser] Fetching...\");\r\n  try {\r\n    const response = await axios.get(\r\n      `${API_BASE_URL}/api/users/me`,\r\n      config || {}\r\n    ); // Teljes útvonal\r\n    console.log(\"[getUser] Success:\", response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"[getUser] Error:\", error.response?.data || error.message);\r\n    // Dobd tovább a hibát\r\n    throw (\r\n      error.response?.data ||\r\n      new Error(\r\n        error.message || \"Nem sikerült betölteni a felhasználó adatait!\"\r\n      )\r\n    );\r\n  }\r\n};\r\n\r\nexport const updateUser = async (userData) => {\r\n  const config = getAuthConfig();\r\n  if (!config) {\r\n    console.error(\"[updateUser] Auth config failed.\");\r\n    throw new Error(\"Nem sikerült hitelesíteni a felhasználót a frissítéshez.\");\r\n  }\r\n\r\n  console.log(\r\n    \"[updateUser] Attempting PUT request to:\",\r\n    `${API_BASE_URL}/users/me`\r\n  );\r\n  console.log(\"[updateUser] Sending data:\", userData);\r\n  console.log(\"[updateUser] Using config:\", config);\r\n\r\n  try {\r\n    const response = await axios.put(\r\n      `${API_BASE_URL}/api/users/me`,\r\n      userData,\r\n      config\r\n    ); // Teljes útvonal\r\n    console.log(\r\n      \"[updateUser] PUT Request successful! Response status:\",\r\n      response.status\r\n    );\r\n    console.log(\"[updateUser] Response data:\", response.data);\r\n    // Fontos: A Promise itt resolve-olódik\r\n    return response.data; // Visszaadjuk a választ\r\n  } catch (error) {\r\n    console.error(\"[updateUser] PUT Request failed!\");\r\n    console.error(\"[updateUser] Error status:\", error.response?.status);\r\n    console.error(\"[updateUser] Error data:\", error.response?.data);\r\n    console.error(\"[updateUser] Full error:\", error);\r\n    // Fontos: A Promise itt reject-elődni fog\r\n    throw new Error(\r\n      error.response?.data?.error ||\r\n        \"Nem sikerült frissíteni a felhasználói adatokat!\"\r\n    );\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}