{"ast":null,"code":"// frontend/src/services/reviewService.js\nimport axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:5000/api\"; // Vagy a te URL-ed\n\nconst getAuthConfig = () => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) return null;\n  return {\n    headers: {\n      \"x-auth-token\": token\n    }\n  };\n};\n\n// Értékelések lekérése egy adott parfümhöz\nexport const getReviewsForPerfume = async perfumeId => {\n  try {\n    // Nem szükséges auth ehhez az endpoint-hoz, ha publikusak az értékelések\n    const response = await axios.get(`${API_BASE_URL}/reviews/perfume/${perfumeId}`);\n    return response.data; // Visszaadja az értékelések tömbjét\n  } catch (error) {\n    var _error$response, _error$response2;\n    console.error(`Error fetching reviews for perfume ${perfumeId}:`, ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || new Error(\"Nem sikerült lekérni az értékeléseket.\");\n  }\n};\n\n// Új értékelés létrehozása\nexport const createReview = async (perfumeId, reviewData) => {\n  const config = getAuthConfig();\n  if (!config) throw new Error(\"Bejelentkezés szükséges az értékeléshez.\");\n\n  // Küldendő adatok (backend controller elvárásai szerint)\n  const dataToSend = {\n    scent_trail_rating: reviewData.sillage,\n    // Map frontend state to backend names\n    longevity_rating: reviewData.longevity,\n    value_rating: reviewData.value,\n    overall_impression: reviewData.overall,\n    review_text: reviewData.comment\n  };\n  try {\n    const response = await axios.post(`${API_BASE_URL}/reviews/perfume/${perfumeId}`, dataToSend, config);\n    return response.data; // { success: true, message: '...', review: {...} }\n  } catch (error) {\n    var _error$response3, _error$response4;\n    console.error(\"Error creating review:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n    throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || new Error(\"Nem sikerült elküldeni az értékelést.\");\n  }\n};\n\n// Értékelés frissítése (ha kell)\nexport const updateReview = async (reviewId, reviewData) => {\n  const config = getAuthConfig();\n  if (!config) throw new Error(\"Bejelentkezés szükséges.\");\n  const dataToSend = {\n    scent_trail_rating: reviewData.sillage,\n    longevity_rating: reviewData.longevity,\n    value_rating: reviewData.value,\n    overall_impression: reviewData.overall,\n    review_text: reviewData.comment\n  };\n  try {\n    const response = await axios.put(`${API_BASE_URL}/reviews/${reviewId}`, dataToSend, config);\n    return response.data;\n  } catch (error) {\n    var _error$response5, _error$response6;\n    console.error(`Error updating review ${reviewId}:`, ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || error.message);\n    throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || new Error(\"Nem sikerült frissíteni az értékelést.\");\n  }\n};\n\n// Értékelés törlése (ha kell)\nexport const deleteReview = async reviewId => {\n  const config = getAuthConfig();\n  if (!config) throw new Error(\"Bejelentkezés szükséges.\");\n  try {\n    const response = await axios.delete(`${API_BASE_URL}/reviews/${reviewId}`, config);\n    return response.data;\n  } catch (error) {\n    var _error$response7, _error$response8;\n    console.error(`Error deleting review ${reviewId}:`, ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data) || error.message);\n    throw ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data) || new Error(\"Nem sikerült törölni az értékelést.\");\n  }\n};\n\n// Nincs szükség getAllReviews, getReviewById frontend service-re általában,\n// hacsak nincs szerkesztés/törlés funkció.","map":{"version":3,"names":["axios","API_BASE_URL","getAuthConfig","token","localStorage","getItem","headers","getReviewsForPerfume","perfumeId","response","get","data","error","_error$response","_error$response2","console","message","Error","createReview","reviewData","config","dataToSend","scent_trail_rating","sillage","longevity_rating","longevity","value_rating","value","overall_impression","overall","review_text","comment","post","_error$response3","_error$response4","updateReview","reviewId","put","_error$response5","_error$response6","deleteReview","delete","_error$response7","_error$response8"],"sources":["C:/Users/KomPhone/Desktop/Parfumvilag2.0/Parfumvilag_2.0/frontend/src/services/reviewService.js"],"sourcesContent":["// frontend/src/services/reviewService.js\r\nimport axios from \"axios\";\r\n\r\nconst API_BASE_URL = \"http://localhost:5000/api\"; // Vagy a te URL-ed\r\n\r\nconst getAuthConfig = () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) return null;\r\n  return { headers: { \"x-auth-token\": token } };\r\n};\r\n\r\n// Értékelések lekérése egy adott parfümhöz\r\nexport const getReviewsForPerfume = async (perfumeId) => {\r\n  try {\r\n    // Nem szükséges auth ehhez az endpoint-hoz, ha publikusak az értékelések\r\n    const response = await axios.get(\r\n      `${API_BASE_URL}/reviews/perfume/${perfumeId}`\r\n    );\r\n    return response.data; // Visszaadja az értékelések tömbjét\r\n  } catch (error) {\r\n    console.error(\r\n      `Error fetching reviews for perfume ${perfumeId}:`,\r\n      error.response?.data || error.message\r\n    );\r\n    throw (\r\n      error.response?.data ||\r\n      new Error(\"Nem sikerült lekérni az értékeléseket.\")\r\n    );\r\n  }\r\n};\r\n\r\n// Új értékelés létrehozása\r\nexport const createReview = async (perfumeId, reviewData) => {\r\n  const config = getAuthConfig();\r\n  if (!config) throw new Error(\"Bejelentkezés szükséges az értékeléshez.\");\r\n\r\n  // Küldendő adatok (backend controller elvárásai szerint)\r\n  const dataToSend = {\r\n    scent_trail_rating: reviewData.sillage, // Map frontend state to backend names\r\n    longevity_rating: reviewData.longevity,\r\n    value_rating: reviewData.value,\r\n    overall_impression: reviewData.overall,\r\n    review_text: reviewData.comment,\r\n  };\r\n\r\n  try {\r\n    const response = await axios.post(\r\n      `${API_BASE_URL}/reviews/perfume/${perfumeId}`,\r\n      dataToSend,\r\n      config\r\n    );\r\n    return response.data; // { success: true, message: '...', review: {...} }\r\n  } catch (error) {\r\n    console.error(\r\n      \"Error creating review:\",\r\n      error.response?.data || error.message\r\n    );\r\n    throw (\r\n      error.response?.data || new Error(\"Nem sikerült elküldeni az értékelést.\")\r\n    );\r\n  }\r\n};\r\n\r\n// Értékelés frissítése (ha kell)\r\nexport const updateReview = async (reviewId, reviewData) => {\r\n  const config = getAuthConfig();\r\n  if (!config) throw new Error(\"Bejelentkezés szükséges.\");\r\n\r\n  const dataToSend = {\r\n    scent_trail_rating: reviewData.sillage,\r\n    longevity_rating: reviewData.longevity,\r\n    value_rating: reviewData.value,\r\n    overall_impression: reviewData.overall,\r\n    review_text: reviewData.comment,\r\n  };\r\n\r\n  try {\r\n    const response = await axios.put(\r\n      `${API_BASE_URL}/reviews/${reviewId}`,\r\n      dataToSend,\r\n      config\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      `Error updating review ${reviewId}:`,\r\n      error.response?.data || error.message\r\n    );\r\n    throw (\r\n      error.response?.data ||\r\n      new Error(\"Nem sikerült frissíteni az értékelést.\")\r\n    );\r\n  }\r\n};\r\n\r\n// Értékelés törlése (ha kell)\r\nexport const deleteReview = async (reviewId) => {\r\n  const config = getAuthConfig();\r\n  if (!config) throw new Error(\"Bejelentkezés szükséges.\");\r\n\r\n  try {\r\n    const response = await axios.delete(\r\n      `${API_BASE_URL}/reviews/${reviewId}`,\r\n      config\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\r\n      `Error deleting review ${reviewId}:`,\r\n      error.response?.data || error.message\r\n    );\r\n    throw (\r\n      error.response?.data || new Error(\"Nem sikerült törölni az értékelést.\")\r\n    );\r\n  }\r\n};\r\n\r\n// Nincs szükség getAllReviews, getReviewById frontend service-re általában,\r\n// hacsak nincs szerkesztés/törlés funkció.\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}