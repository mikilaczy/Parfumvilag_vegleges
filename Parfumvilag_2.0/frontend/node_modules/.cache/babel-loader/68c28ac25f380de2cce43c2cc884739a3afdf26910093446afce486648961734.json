{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KomPhone\\\\Desktop\\\\Parfumvilag_vegleges\\\\Parfumvilag_2.0\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { login as loginService } from \"../services/authService\";\nimport { AuthContext } from \"../App\";\n\n// Bejelentkezési űrlapot megjelenítő komponens\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  // Állapotok az űrlap mezőihez és a komponens működéséhez\n  const [email, setEmail] = useState(\"\"); // E-mail cím input mező állapota\n  const [password, setPassword] = useState(\"\"); // Jelszó input mező állapota\n  const [error, setError] = useState(\"\"); // Hibaüzenetek tárolására szolgáló állapot\n  const [loading, setLoading] = useState(false); // Töltési állapot jelzésére (API hívás alatt)\n  const navigate = useNavigate(); // Navigációs hook inicializálása\n  const {\n    login\n  } = useContext(AuthContext); // Globális 'login' függvény kinyerése a kontextusból\n\n  // Űrlap beküldését kezelő aszinkron függvény\n  const handleSubmit = async e => {\n    e.preventDefault(); // Alapértelmezett űrlapbeküldés megakadályozása\n    setError(\"\"); // Korábbi hibaüzenetek törlése\n    setLoading(true); // Töltési állapot bekapcsolása (űrlap letiltásához)\n\n    try {\n      // Meghívjuk a bejelentkeztető service függvényt az email és jelszó adatokkal\n      const {\n        user,\n        token\n      } = await loginService(email, password); // Visszakapjuk a felhasználói adatokat és a tokent\n\n      // Meghívjuk a globális (kontextusból származó) login függvényt, hogy frissítsük az alkalmazás állapotát\n      login(user, token);\n\n      // Sikeres bejelentkezés után átirányítjuk a felhasználót a profil oldalra\n      navigate(\"/profil\");\n    } catch (error) {\n      // Hiba esetén beállítjuk a hibaüzenetet a service-től kapott üzenettel vagy egy alapértelmezettel\n      setError(error.message || \"Bejelentkezés sikertelen!\");\n      console.error(\"Login failed:\", error); // Hiba logolása a konzolra fejlesztési célból\n    } finally {\n      // Ez a blokk mindenképpen lefut (siker és hiba esetén is)\n      setLoading(false); // Töltési állapot kikapcsolása (űrlap újra engedélyezése)\n    }\n  };\n\n  // Komponens JSX struktúrája\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bejelentkez\\xE9s\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"form-control\" // Bootstrap stílus\n          ,\n          id: \"email\",\n          value: email // Input értékének kötése az 'email' állapothoz\n          ,\n          onChange: e => setEmail(e.target.value) // Állapot frissítése gépeléskor\n          ,\n          required: true // Kötelező mező\n          ,\n          disabled: loading // Letiltva, ha a bejelentkezés folyamatban van\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Jelsz\\xF3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          id: \"password\",\n          value: password // Input értékének kötése a 'password' állapothoz\n          ,\n          onChange: e => setPassword(e.target.value) // Állapot frissítése gépeléskor\n          ,\n          required: true // Kötelező mező\n          ,\n          disabled: loading // Letiltva, ha a bejelentkezés folyamatban van\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: loading,\n        children: loading ? \"Bejelentkezés...\" : \"Bejelentkezés\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"gQSXcX3z7iTDMwBR134KZ7LCAE4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","login","loginService","AuthContext","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","user","token","message","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/KomPhone/Desktop/Parfumvilag_vegleges/Parfumvilag_2.0/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { login as loginService } from \"../services/authService\";\r\nimport { AuthContext } from \"../App\";\r\n\r\n// Bejelentkezési űrlapot megjelenítő komponens\r\nconst Login = () => {\r\n  // Állapotok az űrlap mezőihez és a komponens működéséhez\r\n  const [email, setEmail] = useState(\"\"); // E-mail cím input mező állapota\r\n  const [password, setPassword] = useState(\"\"); // Jelszó input mező állapota\r\n  const [error, setError] = useState(\"\"); // Hibaüzenetek tárolására szolgáló állapot\r\n  const [loading, setLoading] = useState(false); // Töltési állapot jelzésére (API hívás alatt)\r\n  const navigate = useNavigate(); // Navigációs hook inicializálása\r\n  const { login } = useContext(AuthContext); // Globális 'login' függvény kinyerése a kontextusból\r\n\r\n  // Űrlap beküldését kezelő aszinkron függvény\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Alapértelmezett űrlapbeküldés megakadályozása\r\n    setError(\"\"); // Korábbi hibaüzenetek törlése\r\n    setLoading(true); // Töltési állapot bekapcsolása (űrlap letiltásához)\r\n\r\n    try {\r\n      // Meghívjuk a bejelentkeztető service függvényt az email és jelszó adatokkal\r\n      const { user, token } = await loginService(email, password); // Visszakapjuk a felhasználói adatokat és a tokent\r\n\r\n      // Meghívjuk a globális (kontextusból származó) login függvényt, hogy frissítsük az alkalmazás állapotát\r\n      login(user, token);\r\n\r\n      // Sikeres bejelentkezés után átirányítjuk a felhasználót a profil oldalra\r\n      navigate(\"/profil\");\r\n    } catch (error) {\r\n      // Hiba esetén beállítjuk a hibaüzenetet a service-től kapott üzenettel vagy egy alapértelmezettel\r\n      setError(error.message || \"Bejelentkezés sikertelen!\");\r\n      console.error(\"Login failed:\", error); // Hiba logolása a konzolra fejlesztési célból\r\n    } finally {\r\n      // Ez a blokk mindenképpen lefut (siker és hiba esetén is)\r\n      setLoading(false); // Töltési állapot kikapcsolása (űrlap újra engedélyezése)\r\n    }\r\n  };\r\n\r\n  // Komponens JSX struktúrája\r\n  return (\r\n    <div className=\"container\">\r\n      {\" \"}\r\n      {/* Fő konténer az oldal tartalmához */}\r\n      <h1>Bejelentkezés</h1> {/* Oldal címe */}\r\n      {/* Hibaüzenet megjelenítése, ha van hiba */}\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      {/* Bejelentkezési űrlap */}\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Email cím input mező */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\" // Bootstrap stílus\r\n            id=\"email\"\r\n            value={email} // Input értékének kötése az 'email' állapothoz\r\n            onChange={(e) => setEmail(e.target.value)} // Állapot frissítése gépeléskor\r\n            required // Kötelező mező\r\n            disabled={loading} // Letiltva, ha a bejelentkezés folyamatban van\r\n          />\r\n        </div>\r\n        {/* Jelszó input mező */}\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"password\" className=\"form-label\">\r\n            Jelszó\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            value={password} // Input értékének kötése a 'password' állapothoz\r\n            onChange={(e) => setPassword(e.target.value)} // Állapot frissítése gépeléskor\r\n            required // Kötelező mező\r\n            disabled={loading} // Letiltva, ha a bejelentkezés folyamatban van\r\n          />\r\n        </div>\r\n        {/* Beküldés gomb */}\r\n        <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n          {/* Gomb szövege a töltési állapottól függően változik */}\r\n          {loading ? \"Bejelentkezés...\" : \"Bejelentkezés\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}