{"ast":null,"code":"// frontend/src/services/userService.js\nimport axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:5000/api\";\nconst getUser = async () => {\n  const token = localStorage.getItem(\"token\");\n  try {\n    const response = await axios.get(`${API_BASE_URL}/users/me`, {\n      headers: {\n        \"x-auth-token\": token\n      }\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Nem sikerült betölteni a felhasználó adatait!\";\n  }\n};\nconst updateUser = async userData => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) throw new Error(\"Nincs hitelesítve.\"); // Added token check\n\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        // Ensure JSON content type\n        \"x-auth-token\": token\n      }\n    };\n    // Send userData directly as JSON\n    const response = await axios.put(`${API_BASE_URL}/users/me`, userData, config);\n    return response.data; // Assuming backend returns the updated user object (without password)\n  } catch (error) {\n    var _error$response2, _error$response3, _error$response3$data;\n    console.error(\"Error updating user:\", ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n    // Provide more specific error messages if possible\n    throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || \"Nem sikerült frissíteni a felhasználói adatokat!\");\n  }\n};\nexport { getUser, updateUser };","map":{"version":3,"names":["axios","API_BASE_URL","getUser","token","localStorage","getItem","response","get","headers","data","error","_error$response","_error$response$data","updateUser","userData","Error","config","put","_error$response2","_error$response3","_error$response3$data","console","message"],"sources":["C:/Users/KomPhone/Desktop/Parfumvilag2.0/Parfumvilag_2.0/frontend/src/services/userService.js"],"sourcesContent":["// frontend/src/services/userService.js\r\nimport axios from \"axios\";\r\n\r\nconst API_BASE_URL = \"http://localhost:5000/api\";\r\n\r\nconst getUser = async () => {\r\n  const token = localStorage.getItem(\"token\");\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/users/me`, {\r\n      headers: { \"x-auth-token\": token },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw (\r\n      error.response?.data?.error ||\r\n      \"Nem sikerült betölteni a felhasználó adatait!\"\r\n    );\r\n  }\r\n};\r\n\r\nconst updateUser = async (userData) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  if (!token) throw new Error(\"Nincs hitelesítve.\"); // Added token check\r\n\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\", // Ensure JSON content type\r\n        \"x-auth-token\": token,\r\n      },\r\n    };\r\n    // Send userData directly as JSON\r\n    const response = await axios.put(\r\n      `${API_BASE_URL}/users/me`,\r\n      userData,\r\n      config\r\n    );\r\n    return response.data; // Assuming backend returns the updated user object (without password)\r\n  } catch (error) {\r\n    console.error(\r\n      \"Error updating user:\",\r\n      error.response?.data || error.message\r\n    );\r\n    // Provide more specific error messages if possible\r\n    throw new Error(\r\n      error.response?.data?.error ||\r\n        \"Nem sikerült frissíteni a felhasználói adatokat!\"\r\n    );\r\n  }\r\n};\r\n\r\nexport { getUser, updateUser };\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC1B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,GAAGN,YAAY,WAAW,EAAE;MAC3DO,OAAO,EAAE;QAAE,cAAc,EAAEL;MAAM;IACnC,CAAC,CAAC;IACF,OAAOG,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACd,MACE,EAAAD,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAC3B,+CAA+C;EAEnD;AACF,CAAC;AAED,MAAMG,UAAU,GAAG,MAAOC,QAAQ,IAAK;EACrC,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACF,KAAK,EAAE,MAAM,IAAIY,KAAK,CAAC,oBAAoB,CAAC,CAAC,CAAC;;EAEnD,IAAI;IACF,MAAMC,MAAM,GAAG;MACbR,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAAE;QACpC,cAAc,EAAEL;MAClB;IACF,CAAC;IACD;IACA,MAAMG,QAAQ,GAAG,MAAMN,KAAK,CAACiB,GAAG,CAC9B,GAAGhB,YAAY,WAAW,EAC1Ba,QAAQ,EACRE,MACF,CAAC;IACD,OAAOV,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IAAA,IAAAQ,gBAAA,EAAAC,gBAAA,EAAAC,qBAAA;IACdC,OAAO,CAACX,KAAK,CACX,sBAAsB,EACtB,EAAAQ,gBAAA,GAAAR,KAAK,CAACJ,QAAQ,cAAAY,gBAAA,uBAAdA,gBAAA,CAAgBT,IAAI,KAAIC,KAAK,CAACY,OAChC,CAAC;IACD;IACA,MAAM,IAAIP,KAAK,CACb,EAAAI,gBAAA,GAAAT,KAAK,CAACJ,QAAQ,cAAAa,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBV,IAAI,cAAAW,qBAAA,uBAApBA,qBAAA,CAAsBV,KAAK,KACzB,kDACJ,CAAC;EACH;AACF,CAAC;AAED,SAASR,OAAO,EAAEW,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}